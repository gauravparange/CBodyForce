@model SubscriptionDto
@{
    ViewData["Title"] = "AddSubscriptionType";
    string Action = Model.SubscriptionTypeId == 0 ? "AddSubscriptionType" : "EditSubscriptionType";
    string ButtonName = Model.SubscriptionTypeId == 0 ? "Add" : "Edit";
}

<div class="container mt-4">
    <div class="card">
        <h4 class="card-header text-center text-uppercase bg-secondary text-white py-3">
            Add Subscription Type
        </h4>
        <div class="card-body">
            <form asp-action="@Action">
                <input asp-for="SubscriptionTypeId" hidden />

                <!-- Name & Description Row -->
                <div class="row g-3">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="Name" class="form-label">Name</label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="form-group">
                            <label asp-for="Description" class="form-label">Description</label>
                            <input asp-for="Description" class="form-control" />
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Price, Duration, Status Row -->
                <div class="row g-3 mt-2">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="Price" class="form-label">Price</label>
                            <input asp-for="Price" class="form-control" />
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="DurationInMonths" class="form-label">Duration (Months)</label>
                            <input asp-for="DurationInMonths" id="month" oninput="calculateDays()" class="form-control" />
                            <span asp-validation-for="DurationInMonths" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="DurationInDays" class="form-label">Duration (Days)</label>
                            <input asp-for="DurationInDays" id="days" class="form-control" />
                            <span asp-validation-for="DurationInDays" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label asp-for="IsActive" class="form-label">Status</label>
                            <select asp-for="IsActive" class="form-control">
                                <option value="">Choose status</option>
                                <option value="true">Active</option>
                                <option value="false">Not Active</option>
                            </select>
                            <span asp-validation-for="IsActive" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="form-group d-flex justify-content-center mt-4">
                    <input type="submit" value="@ButtonName" class="btn btn-primary px-5" />
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function calculateDays() {
        const monthsToAdd = parseInt(document.getElementById("month").value);
        const startDate = new Date(); // Today
        let totalDays = 0;

        if (!isNaN(monthsToAdd) && monthsToAdd > 0) {
            let currentMonth = startDate.getMonth(); // 0-indexed
            let currentYear = startDate.getFullYear();

            for (let i = 0; i < monthsToAdd; i++) {
                const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
                totalDays += daysInMonth;

                currentMonth++;
                if (currentMonth > 11) {
                    currentMonth = 0;
                    currentYear++;
                }
            }
        }

        document.getElementById("days").value = totalDays;
    }
</script>
